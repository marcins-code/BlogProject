{#{{ form_start(form) }}#}
{#    {{ form_widget(form) }}#}
{#{{ form_row(form.title) }}#}
{#{{ form_row(form.category) }}#}
{#<button class="btn">{{ button_label|default('Save') }}</button>#}
{#{{ form_end(form) }}#}


{% extends 'base.html.twig' %}
{% block left_sidebar %}
{% endblock %}
    {% block content %}
        {{ form_start(form) }}
        <div data-uk-grid class="uk-padding-small">
            <div class="uk-width-1-6@m uk-form-buttons">
                <div class="uk-card">
                    <div class="uk-card-body uk-background-dark">
                        {{ form_row(form.save) }}
                        {{ form_row(form.save_exit) }}
                        {{ form_row(form.save_new) }}
                        <a class="uk-button uk-button-danger" href="{{ path('article_index') }}"><i
                                    class="far fa-times-circle"></i> Exit</a>
                    </div>
                </div>
            </div>
            <div class="uk-width-expand@m">
                <div data-uk-grid>
                    <div class="uk-width-expand">
                        {{ form_row(form.title) }}
                    </div>
                    <div class="uk-width-1-4">
                        {{ form_row(form.category) }}
                    </div>
                    <div class="uk-width-1-4">
                        {{ form_row(form.isPublished) }}
                    </div>
                </div>

                <div data-uk-grid>
                    <div class="uk-width-expand">
                        {{ form_row(form.content) }}
                    </div>
                </div>
            </div>
        </div>

        {{ form_end(form) }}
    {% endblock %}


{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/codemirror/codemirror.css') }}">
    <link rel="stylesheet" href="{{ asset('css/codemirror/theme/github.css') }}">
    <link rel="stylesheet" href="{{ asset('css/codemirror/foldgutter.css') }}">
{% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script src="/js/codemirror/lib/codemirror.js"></script>
    <script src="/js/codemirror/addon/edit/closetag.js"></script>
    <script src="/js/codemirror/addon/fold/foldcode.js"></script>
    <script src="/js/codemirror/addon/fold/foldgutter.js"></script>
    <script src="/js/codemirror/addon/fold/brace-fold.js"></script>
    <script src="/js/codemirror/addon/fold/xml-fold.js"></script>
    <script src="/js/codemirror/addon/fold/indent-fold.js"></script>
    <script src="/js/codemirror/addon/fold/markdown-fold.js"></script>
    <script src="/js/codemirror/addon/fold/comment-fold.js"></script>
    <script src="/js/codemirror/mode/xml/xml.js"></script>
    <script src="/js/codemirror/mode/css/css.js"></script>
    <script src="/js/codemirror/mode/htmlmixed/htmlmixed.js"></script>



    <script>

        document.addEventListener("DOMContentLoaded", function (event) {
            var codemirrorInstance = [];
            var foundtextareasarr = document.getElementsByClassName('codemirror');
            for (var i = 0; foundtextareasarr[i]; ++i) {
                codemirrorInstance[i] = CodeMirror.fromTextArea(foundtextareasarr[i], {
                    lineNumbers: true,
                    autoCloseTags: true,
                    viewportMargin: Infinity,
                    theme: 'github',
                    mode: 'htmlmixed',
                    tags: {
                        style: [["type", /^text\/(x-)?scss$/, "text/x-scss"],
                            [null, null, "css"]],
                        custom: [[null, null, "customMode"]]
                    },
                    lineWrapping: true,
                    extraKeys: {
                        "Ctrl-Q": function (cm) {
                            cm.foldCode(cm.getCursor());
                        }
                    },
                    foldGutter: true,
                    gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"]


                });
            }
        });


        // var textareas = document.querySelectorAll(".codemirror");
        //
        // for (var i = 0; i < textareas.length; i++) {
        //     CodeMirror.fromTextArea(textareas[i], {
        //         lineWrapping: true,
        //         mode: "javascript",
        //         theme: "neat",
        //         lineNumbers: true
        //     });
        // }


        // function qsa(sel) {
        //     return Array.apply(null, document.querySelectorAll(sel));
        // }
        // qsa(".codemirror").forEach(function (editorEl) {
        //     CodeMirror.fromTextArea(editorEl, {
        //         lineNumbers: true,
        //         styleActiveLine: true,
        //         matchBrackets: true,
        //         theme: 'monokai',
        //     });
        // });
    </script>
{% endblock %}


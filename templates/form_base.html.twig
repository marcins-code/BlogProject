{% extends 'base.html.twig' %}
{% block left_sidebar %}
{% endblock %}


{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/codemirror/codemirror.css') }}">
    <link rel="stylesheet" href="{{ asset('css/codemirror/theme/xq-light.css') }}">
    <link rel="stylesheet" href="{{ asset('css/codemirror/foldgutter.css') }}">
{% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script src="/js/codemirror/lib/codemirror.js"></script>
    <script src="/js/codemirror/addon/edit/closetag.js"></script>
    <script src="/js/codemirror/addon/fold/foldcode.js"></script>
    <script src="/js/codemirror/addon/fold/foldgutter.js"></script>
    <script src="/js/codemirror/addon/fold/brace-fold.js"></script>
    <script src="/js/codemirror/addon/fold/xml-fold.js"></script>
    <script src="/js/codemirror/addon/fold/indent-fold.js"></script>
    <script src="/js/codemirror/addon/fold/markdown-fold.js"></script>
    <script src="/js/codemirror/addon/fold/comment-fold.js"></script>
    <script src="/js/codemirror/mode/xml/xml.js"></script>
    <script src="/js/codemirror/mode/css/css.js"></script>
    <script src="/js/codemirror/mode/htmlmixed/htmlmixed.js"></script>



    <script>

        document.addEventListener("DOMContentLoaded", function(event) {
            var codemirrorInstance = [];
            var foundtextareasarr = document.getElementsByClassName('codemirror');
            for(var i = 0; foundtextareasarr[i]; ++i) {
                codemirrorInstance[i] = CodeMirror.fromTextArea(foundtextareasarr[i], {
                    lineNumbers: true,
                    autoCloseTags: true,
                    viewportMargin: Infinity,
                    theme:'xq-light',
                    mode: 'htmlmixed',
                    tags: {
                        style: [["type", /^text\/(x-)?scss$/, "text/x-scss"],
                            [null, null, "css"]],
                        custom: [[null, null, "customMode"]]
                    },
                    lineWrapping: true,
                    extraKeys: {"Ctrl-Q": function(cm){ cm.foldCode(cm.getCursor()); }},
                    foldGutter: true,
                    gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"]


                });
            }
        });


        // var textareas = document.querySelectorAll(".codemirror");
        //
        // for (var i = 0; i < textareas.length; i++) {
        //     CodeMirror.fromTextArea(textareas[i], {
        //         lineWrapping: true,
        //         mode: "javascript",
        //         theme: "neat",
        //         lineNumbers: true
        //     });
        // }


        // function qsa(sel) {
        //     return Array.apply(null, document.querySelectorAll(sel));
        // }
        // qsa(".codemirror").forEach(function (editorEl) {
        //     CodeMirror.fromTextArea(editorEl, {
        //         lineNumbers: true,
        //         styleActiveLine: true,
        //         matchBrackets: true,
        //         theme: 'monokai',
        //     });
        // });
    </script>
{% endblock %}